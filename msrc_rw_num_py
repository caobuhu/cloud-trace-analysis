import os
import sys

data_file = r''  
write_cnt_output_file = r'write_cnt_'
read_cnt_output_file = r'read_cnt_'
write_file_handle = None
read_file_handle = None
mode_column=3
time_stamp_column=0


def print_info(interval: int):
    print("count interval(ms):{}".format(interval))
    print("write cnt output file path:{}".format(write_cnt_output_file))
    print("read cnt output file path:{}".format(read_cnt_output_file))


def init_file_handle():
    global write_file_handle, read_file_handle
    write_file_handle = open(write_cnt_output_file, 'w')
    read_file_handle = open(read_cnt_output_file, 'w')


def close_file_handle():
    if write_file_handle is not None:
        write_file_handle.close()
    if read_file_handle is not None:
        read_file_handle.close()


def process_data(interval: int):
    global data_file
    init_file_handle()
    interval = interval * 100000  
    write_start_time = -1
    read_start_time = -1
    write_cnt = 0
    read_cnt = 0
    with open(data_file, 'r') as f:
        while True:
            line = f.readline()
            if line == "":  
                break
            field = line.split(',')
            mode = field[mode_column].upper()  
            cur_time = int(field[time_stamp_column])  
            if 'W' in mode:
                if write_start_time == -1:
                    write_start_time = cur_time
                    write_cnt = 1
                elif cur_time - write_start_time < interval:
                    write_cnt += 1
                else:
                    write_file_handle.write("{}\n".format(write_cnt))
                    write_start_time = cur_time
                    write_cnt = 1
            elif 'R' in mode:
                if read_start_time == -1:
                    read_start_time = cur_time
                    read_cnt = 1
                elif cur_time - read_start_time < interval:
                    read_cnt += 1
                else:
                    read_file_handle.write("{}\n".format(read_cnt))
                    read_start_time = cur_time
                    read_cnt = 1
            else:
                print("pase error happened", field)
                close_file_handle()
                exit(-1)
    close_file_handle()


if __name__ == '__main__':
    if len(sys.argv) != 3:
        print("usage: ./counter.py interval data_file_path, in which interval(ms)")
        exit(-1)
    print("input args", sys.argv)
    try:
        interval = int(sys.argv[1])
        data_file = sys.argv[2]
    except:
        print("parse input value failed")
        exit(-1)
    if not os.path.exists(data_file):
        print("input file data path doesn't exist:{}".format(data_file))
        exit(-1)
    write_cnt_output_file = data_file + "_" + write_cnt_output_file + str(interval) + 'ms'
    read_cnt_output_file = data_file + "_" + read_cnt_output_file + str(interval) + 'ms'

    print_info(interval)
    process_data(interval)




